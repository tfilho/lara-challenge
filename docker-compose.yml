version: "3.4"

# Named volumes
volumes:
  # MySQL Data
  lara-challenge-mysql-data:
    driver: local
  # MongoDB Data
  lara-challenge-mongodb-data:
    driver: local

services:

  lara-challenge-api:
    container_name: lara-challenge-api
    build:
      context: .
      dockerfile: ./.docker/DockerfileLaravel
    volumes:
      - ./../lara-challenge/:/usr/share/nginx:delegated
      - ./.docker/nginx/laravel_default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8084:80"
    networks:
      outside-world:

  lara-challenge-mongodb:
    image: mongo:3.6
    container_name: lara-challenge-mongodb
    volumes:
      # cached flag: The host’s view of the mount is authoritative
      - lara-challenge-mongodb-data:/data/db:cached
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secret
      - MONGO_INITDB_DATABASE=lara-challenge
    networks:
      outside-world:

  lara-challenge-mysql:
    #    build:
    #      context: .
    #      dockerfile: .docker/mysql/Dockerfile
    image: mysql:8.0.11
    container_name: lara-challenge-mysql
    volumes:
      # cached flag: The host’s view of the mount is authoritative
      - lara-challenge-mysql-data:/var/lib/mysql:cached
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/generic.cnf:cached
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=lara-challenge
      - MYSQL_USER=root
      - MYSQL_PASSWORD=secret
    networks:
      outside-world:
networks:
  outside-world:
